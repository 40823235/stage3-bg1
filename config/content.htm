<h1>About</h1>
<p>小組倉儲:</p>
<p><a href="https://github.com/40823245/stage3-bg1">https://github.com/40823245/stage3-bg1</a></p>
<p><a href="https://github.com/40823251/stage3-bg1">https://github.com/40823251/stage3-bg1</a></p>
<p><a href="https://github.com/40823208/stage3-bg1">https://github.com/40823208/stage3-bg1</a></p>
<p><a href="https://github.com/40823246/stage3-bg1">https://github.com/40823246/stage3-bg1</a></p>
<p><a href="https://github.com/40823213/stage3-bg1">https://github.com/40823213/stage3-bg1</a></p>
<p><a href="https://github.com/40823232/stage3-bg1">https://github.com/40823232/stage3-bg1</a></p>
<p><a href="https://github.com/40823234/stage3-bg1">https://github.com/40823234/stage3-bg1</a></p>
<p><a href="https://github.com/40823235/stage3-bg1">https://github.com/40823235/stage3-bg1</a></p>
<p>被封鎖github改為gitlab組員:</p>
<p><a href="https://gitlab.com/40823245/stage3-bg1">40823245</a>/<a href="https://40823245.gitlab.io/stage3-bg1/content/index.html">40823245</a></p>
<p><a href="https://gitlab.com/40823232/stage3-bg1">40823232</a>/<a href="https://40823232.gitlab.io/stage3-bg1/content/index.html">40823232</a></p>
<p>小組成員:</p>
<p><a href="https://github.com/40823245/cd2021">40823245</a>/<a href="https://40823245.github.io/cd2021/content/index.html">40823245</a></p>
<p><a href="https://github.com/40823251/cd2021">40823251</a>/<a href="https://40823251.github.io/cd2021/content/index.html">40823251</a></p>
<p><a href="https://github.com/40823208/cd2021">40823208</a>/<a href="https://40823208.github.io/cd2021/content/index.html">40823208</a></p>
<p><a href="https://github.com/40823246/cd2021">40823246</a>/<a href="https://40823246.github.io/cd2021/content/index.html">40823246</a></p>
<p><a href="https://github.com/40823213/cd2021">40823213</a>/<a href="https://40823213.github.io/cd2021/content/index.html">40823213</a></p>
<p><a href="https://github.com/40823232/cd2021">40823232</a>/<a href="https://40823232.github.io/cd2021/content/index.html">40823232</a></p>
<p><a href="https://github.com/40823234/cd2021">40823234</a>/<a href="https://40823234.github.io/cd2021/content/index.html">40823234</a></p>
<p><a href="https://github.com/40823235/cd2021">40823235</a>/<a href="https://40823235.github.io/cd2021/content/index.html">40823235</a></p><h1>小組作業</h1>
<h4>每周更新內容，放置作業和檔案</h4>
<h2>W9 統整各組資料</h2>
<h4>stage1</h4>
<h5>bg1</h5>
<h6><strong>主題:掃地機器人</strong></h6>
<h6><strong>分工:</strong><br/><strong>40823245-REVEAL製作、合併網站、程式模擬<br/>40823251-PDF檔製作、提交請求、繪製圖檔</strong></h6>
<h6><strong>簡述:</strong><br/><strong>利用自動化機械結構來滿足靠人力打掃家中的需求，並實現節省時間及勞力的願景。<br/>_________________________________________________________________</strong></h6>
<h5>bg2</h5>
<h6><strong>主題:夾爪機構</strong></h6>
<h6><strong>分工:</strong><br/><strong>40823234-REVEAL製作、V-rep模擬</strong><br/><strong>40823235-PDF檔製作、繪製圖檔</strong></h6>
<h6><strong>簡述:</strong><br/><strong>利用偏心輪帶動夾爪和滑軌來到達想要的位置來抓取物件。</strong><br/><strong>_________________________________________________________________</strong></h6>
<h5>bg8</h5>
<h6><strong>主題:自動分球機</strong></h6>
<h6><strong>分工:</strong><br/><strong>40823208-PDF製作、程式模擬<br/></strong><strong>40823246-REVEAL製作、繪製圖檔</strong></h6>
<h6><strong>簡述:</strong><br/><strong>希望能把遊戲機台的不同大小的鋼珠自動的分類乾淨。<br/><span>_________________________________________________________________</span><br/></strong></h6>
<h5>bg20</h5>
<h6><strong>主題:遊樂設施</strong></h6>
<h6><strong>分工:<br/></strong><strong>40823213-繪圖、inventor模擬   <br/></strong><strong>40823232-CoppeliaSim模擬、pdf、reveal製作</strong></h6>
<h6><strong>簡述:<br/>了解設施的構造，和作動的方式<br/><span>_________________________________________________________________</span><br/></strong></h6>
<h4>stage2</h4>
<h5>bg1</h5>
<h6><strong>主題:堆高機</strong></h6>
<h6><strong>分工:</strong><br/><strong>40823208-網頁編輯、reveal製作                 40823245-CoppeliaSim 模擬<br/>40823246-機構設計、CoppeliaSim 模擬      40823251-網頁編輯、PDF 製作</strong></h6>
<h6>簡述:<br/><strong>透過前方兩支支撐桿載運物品,並利用滑軌裝置實現抬升及下降的</strong><br/><strong>動作,輪子可轉向用以達到目的地。<br/><span>_________________________________________________________________</span><br/></strong></h6>
<h5>bg2</h5>
<h6><strong>主題:遊樂設施</strong></h6>
<h6><strong>分工:</strong><br/><strong>40823213-繪圖、inventor模擬                 40823232-PDF 製作、reveal製作     <span> </span><br/>40823234-CoppeliaSim 模擬                  40823235-網頁編輯</strong></h6>
<h6><strong>簡述:<br/>利用函數的曲線使桿件依照路徑升降，並上下移動。<br/><span>_________________________________________________________________</span><br/></strong></h6>
<h4>stage3-bg1(heroku)</h4>
<p><strong><a href="https://s40823245-stage3-bg1.herokuapp.com/content/index.html">40823245</a></strong></p>
<p><strong><a href="https://s40823251-1.herokuapp.com/content/index.html">40823251</a></strong></p>
<p><strong><a href="https://s40823208-1.herokuapp.com/content/index.html">40823208</a></strong></p>
<p><strong><a href="https://s40823234.herokuapp.com/content/index.html">40823234</a></strong></p>
<p><strong><a href="https://s40823232.herokuapp.com/content/index.html">40823232</a></strong></p>
<p><strong><a href="https://git.heroku.com/s40823246-3">40823246</a></strong></p>
<p><strong><a href="https://s40823235.herokuapp.com/content/index.html">40823235</a></strong></p>
<p><strong><a href="https://s40823213.herokuapp.com/content/index.html">40823213</a></strong></p>
<h2>W10 stage3討論</h2>
<p>               <strong> 4月30討論結果</strong><br/><strong>主題:</strong><br/><strong>生產線整合</strong><br/><strong>分工:</strong><br/><strong>(1)繪圖:40823232、40823213</strong><br/><strong>(2)幫忙及程式編輯:40823234、40823235、40823251</strong><br/><strong>(3)模擬:40823246、40823208</strong><br/><strong>(4)分工支援各種問題:40823245<br/></strong></p>
<p><strong>影片:<br/><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/DBZx-dGqLOI" width="400"></iframe><br/></strong></p>
<h3>ipv4操作</h3>
<p><strong>測試組員:40823251</strong></p>
<p><strong>目的:複習及完成上課未完成連接ipv4之方法。<br/></strong></p>
<p><strong>步驟1.至網路/點選變更介面卡/找到目前已連線的網路按內容</strong></p>
<p><strong>步驟2.選擇ipv4點選自用網址</strong></p>
<p><strong>步驟3.輸入自己的編號連線<br/><img alt="" height="400" src="/images/1620129195212.jpg" width="700"/><br/>步驟4.開啟黑窗輸入</strong></p>
<div>
<div class="syntaxhighlighter html" id="highlighter_306892">
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">python -m http.server 8000 --bind 192.168.192.自己編號
</pre>
</div>
</div>
<p><strong>步驟5.到網路上輸入192.168.192.自己編號:8000 查看是否成功<br/><img alt="" height="500" src="/images/1620129339901.jpg" width="700"/><br/>步驟6.開啟coppeliasim找到ttt檔和用白窗開啟程式<br/></strong></p>
<p><b>步驟7.修改192.168.192.自己編號及名稱(學號)<br/><img alt="" height="400" src="/images/1620129271405.jpg" width="700"/><br/></b></p>
<p><b>步驟8.查看是否成功<br/><img alt="" height="400" src="/images/1620129289024.jpg" width="700"/><br/></b></p>
<p><b>過程影片<br/><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="300" src="https://www.youtube.com/embed/ZfsVqRFf2gI" width="400"></iframe></b></p>
<h3>task1測試</h3>
<h4>40823245編輯</h4>
<p><a href="/downloads/stage3_2b.txt">stage3-2b.txt</a></p>
<h4>使用程式跑出stage3的小組、組長、組員超連結，我參考老師的程式修改後成功執行，但過程有遇到很多問題，就上網找資料和查程式語法，下面2張圖簡單講大概意思，網路上找到的都很清楚(下面附參考網址)。</h4>
<p><img alt="" height="500" src="/images/task1.png" width="300"/></p>
<p><img alt="" height="400" src="/images/task1-1.png" width="600"/></p>
<h4>程式碼</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">def stu2b(account):
    if account == "40823231":
        return account + "-2"
    elif account[0:3] == "407":
        return "s" + account
    else:
        return account

teamb = []

# open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open("stage3_2b.txt") as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
#print(len(data))
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    teamb.append(group)
    
output = ""    
seperator = "-"*10 + "&lt;br /&gt;"

for i in teamb[0:]:
    team = i[0]
    leader = stu2b(i[1])
    m1 = stu2b(i[3])
    m2 = stu2b(i[5])
    m3 = stu2b(i[7])
    m4 = stu2b(i[9])
    m5 = stu2b(i[11])
    m6 = stu2b(i[13])
    
    try:
        m7 = stu2b(i[15])
    except:
        m7 = ""
    try:
        m8 = stu2b(i[17])
    except:
        m8 = ""
        
    leaderrepo = "&lt;a href='http://github.com/" + leader + "/cd2021'&gt;" + leader + " repo&lt;/a&gt;"
    leadersite = "&lt;a href='http://" + leader + ".github.io/cd2021'&gt;" + leader +  " site&lt;/a&gt;"
    m1repo = "&lt;a href='http://github.com/" + m1 + "/cd2021'&gt;" + m1 + " repo&lt;/a&gt;"
    m1site = "&lt;a href='http://" + m1 + ".github.io/cd2021'&gt;" + m1 +  " site&lt;/a&gt;"
    m2repo = "&lt;a href='http://github.com/" + m2 + "/cd2021'&gt;" + m2 + " repo&lt;/a&gt;"
    m2site = "&lt;a href='http://" + m2 + ".github.io/cd2021'&gt;" + m2 +  " site&lt;/a&gt;"
    m3repo = "&lt;a href='http://github.com/" + m3 + "/cd2021'&gt;" + m3 + " repo&lt;/a&gt;"
    m3site = "&lt;a href='http://" + m3 + ".github.io/cd2021'&gt;" + m3 +  " site&lt;/a&gt;"
    m4repo = "&lt;a href='http://github.com/" + m4 + "/cd2021'&gt;" + m4 + " repo&lt;/a&gt;"
    m4site = "&lt;a href='http://" + m4 + ".github.io/cd2021'&gt;" + m4 +  " site&lt;/a&gt;"
    m5repo = "&lt;a href='http://github.com/" + m5 + "/cd2021'&gt;" + m5 + " repo&lt;/a&gt;"
    m5site = "&lt;a href='http://" + m5 + ".github.io/cd2021'&gt;" + m5 +  " site&lt;/a&gt;"
    m6repo = "&lt;a href='http://github.com/" + m6 + "/cd2021'&gt;" + m6 + " repo&lt;/a&gt;"
    m6site = "&lt;a href='http://" + m6 + ".github.io/cd2021'&gt;" + m6 +  " site&lt;/a&gt;"
 

    teamrepo = "&lt;a href='http://github.com/" + leader + "/" + team + "'&gt;" + team + " repo&lt;/a&gt;"
    teamsite =  "&lt;a href='http://" + m1 + ".github.io/" + team + "'&gt;" + team +  " site&lt;/a&gt;"

    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site 
    
    if m7 != "":
       m7repo = "&lt;a href='http://github.com/" + m7 + "/cd2021'&gt;" + m7 + " repo&lt;/a&gt;"
       m7site = "&lt;a href='http://" + m7 + ".github.io/cd2021'&gt;" + m7 +  " site&lt;/a&gt;"   
       output += " |  " + m7repo + "| " + m7site
    else:
        output += "" 
    
    if m8 != "":
       m8repo = "&lt;a href='http://github.com/" + m8 + "/cd2021'&gt;" + m8 + " repo&lt;/a&gt;"
       m8site = "&lt;a href='http://" + m8 + ".github.io/cd2021'&gt;" + m8 +  " site&lt;/a&gt;"   
       output += " |  " + m8repo + "| " + m8site + "&lt;br /&gt;" + seperator
    else:
        output += "&lt;br /&gt;" + seperator


print(output)
# the following will use group data to generate needed html</pre>
<h4>參考資料</h4>
<h4><a href="https://june.monster/python-101-operators-and-priority/">運算符號</a>、<a href="https://www.runoob.com/python/python-operators.html">運算符號-1</a>、<a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/364743/">讀檔</a>、<a href="https://pythonnote.wordpress.com/2014/04/03/python%E6%8A%80%E5%B7%A7%E6%BC%82%E4%BA%AE%E5%8F%88%E9%80%9A%E9%A0%86%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC/">for迴圈</a>、<a href="https://medium.com/ccclub/ccclub-python-for-beginners-tutorial-4990a5757aa6">for迴圈(範圍)</a>、<a href="https://www.runoob.com/python/python-lists.html">列表</a>、<a href="https://blog.csdn.net/csdn15698845876/article/details/73469234">切割字串</a>、<a href="https://ithelp.ithome.com.tw/articles/10231653">異常處理</a></h4>
<h4>遇到問題</h4>
<h4>列表超出範圍(list index out of range)，當時一直以為是沒有定義特殊情況，但之後發現是最後沒有設定好7、8、9人的特殊情況。</h4>
<h4>跑程式的影片</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eAf-Pi5OgB0" title="YouTube video player" width="560"></iframe></p>
<h4>把白窗裡的輸出複製放入網頁</h4>
<h4>結果如下:</h4>
<p><a href="http://github.com/40823245/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823251.github.io/stage3-bg1">stage3-bg1 site</a> | <a href="http://github.com/40823245/cd2021">40823245 repo</a> | <a href="http://40823245.github.io/cd2021">40823245 site</a> | <a href="http://github.com/40823251/cd2021">40823251 repo</a> | <a href="http://40823251.github.io/cd2021">40823251 site</a> | <a href="http://github.com/40823208/cd2021">40823208 repo</a> | <a href="http://40823208.github.io/cd2021">40823208 site</a> | <a href="http://github.com/40823213/cd2021">40823213 repo</a> | <a href="http://40823213.github.io/cd2021">40823213 site</a> | <a href="http://github.com/40823232/cd2021">40823232 repo</a> | <a href="http://40823232.github.io/cd2021">40823232 site</a> | <a href="http://github.com/40823234/cd2021">40823234 repo</a> | <a href="http://40823234.github.io/cd2021">40823234 site</a> | <a href="http://github.com/40823235/cd2021">40823235 repo</a> | <a href="http://40823235.github.io/cd2021">40823235 site</a> | <a href="http://github.com/40823246/cd2021">40823246 repo</a>| <a href="http://40823246.github.io/cd2021">40823246 site</a><br/>----------<br/><a href="http://github.com/40823217/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823201.github.io/stage3-bg2">stage3-bg2 site</a> | <a href="http://github.com/40823217/cd2021">40823217 repo</a> | <a href="http://40823217.github.io/cd2021">40823217 site</a> | <a href="http://github.com/40823201/cd2021">40823201 repo</a> | <a href="http://40823201.github.io/cd2021">40823201 site</a> | <a href="http://github.com/40823209/cd2021">40823209 repo</a> | <a href="http://40823209.github.io/cd2021">40823209 site</a> | <a href="http://github.com/40823210/cd2021">40823210 repo</a> | <a href="http://40823210.github.io/cd2021">40823210 site</a> | <a href="http://github.com/40823206/cd2021">40823206 repo</a> | <a href="http://40823206.github.io/cd2021">40823206 site</a> | <a href="http://github.com/40823207/cd2021">40823207 repo</a> | <a href="http://40823207.github.io/cd2021">40823207 site</a> | <a href="http://github.com/40823223/cd2021">40823223 repo</a> | <a href="http://40823223.github.io/cd2021">40823223 site</a> | <a href="http://github.com/40823224/cd2021">40823224 repo</a>| <a href="http://40823224.github.io/cd2021">40823224 site</a><br/>----------<br/><a href="http://github.com/40823236/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823202.github.io/stage3-bg3">stage3-bg3 site</a> | <a href="http://github.com/40823236/cd2021">40823236 repo</a> | <a href="http://40823236.github.io/cd2021">40823236 site</a> | <a href="http://github.com/40823202/cd2021">40823202 repo</a> | <a href="http://40823202.github.io/cd2021">40823202 site</a> | <a href="http://github.com/40823203/cd2021">40823203 repo</a> | <a href="http://40823203.github.io/cd2021">40823203 site</a> | <a href="http://github.com/40823212/cd2021">40823212 repo</a> | <a href="http://40823212.github.io/cd2021">40823212 site</a> | <a href="http://github.com/40823219/cd2021">40823219 repo</a> | <a href="http://40823219.github.io/cd2021">40823219 site</a> | <a href="http://github.com/40823222/cd2021">40823222 repo</a> | <a href="http://40823222.github.io/cd2021">40823222 site</a> | <a href="http://github.com/40823231-2/cd2021">40823231-2 repo</a> | <a href="http://40823231-2.github.io/cd2021">40823231-2 site</a> | <a href="http://github.com/40823244/cd2021">40823244 repo</a>| <a href="http://40823244.github.io/cd2021">40823244 site</a><br/>----------<br/><a href="http://github.com/40823239/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723140.github.io/stage3-bg4">stage3-bg4 site</a> | <a href="http://github.com/40823239/cd2021">40823239 repo</a> | <a href="http://40823239.github.io/cd2021">40823239 site</a> | <a href="http://github.com/s40723140/cd2021">s40723140 repo</a> | <a href="http://s40723140.github.io/cd2021">s40723140 site</a> | <a href="http://github.com/s40723128/cd2021">s40723128 repo</a> | <a href="http://s40723128.github.io/cd2021">s40723128 site</a> | <a href="http://github.com/s40723139/cd2021">s40723139 repo</a> | <a href="http://s40723139.github.io/cd2021">s40723139 site</a> | <a href="http://github.com/s40723106/cd2021">s40723106 repo</a> | <a href="http://s40723106.github.io/cd2021">s40723106 site</a> | <a href="http://github.com/s40723135/cd2021">s40723135 repo</a> | <a href="http://s40723135.github.io/cd2021">s40723135 site</a> | <a href="http://github.com/s40723143/cd2021">s40723143 repo</a> | <a href="http://s40723143.github.io/cd2021">s40723143 site</a> | <a href="http://github.com/s40723215/cd2021">s40723215 repo</a>| <a href="http://s40723215.github.io/cd2021">s40723215 site</a><br/>----------<br/><a href="http://github.com/40823221/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823204.github.io/stage3-bg5">stage3-bg5 site</a> | <a href="http://github.com/40823221/cd2021">40823221 repo</a> | <a href="http://40823221.github.io/cd2021">40823221 site</a> | <a href="http://github.com/40823204/cd2021">40823204 repo</a> | <a href="http://40823204.github.io/cd2021">40823204 site</a> | <a href="http://github.com/40823205/cd2021">40823205 repo</a> | <a href="http://40823205.github.io/cd2021">40823205 site</a> | <a href="http://github.com/40823220/cd2021">40823220 repo</a> | <a href="http://40823220.github.io/cd2021">40823220 site</a> | <a href="http://github.com/40823228/cd2021">40823228 repo</a> | <a href="http://40823228.github.io/cd2021">40823228 site</a> | <a href="http://github.com/40823237/cd2021">40823237 repo</a> | <a href="http://40823237.github.io/cd2021">40823237 site</a> | <a href="http://github.com/40823242/cd2021">40823242 repo</a> | <a href="http://40823242.github.io/cd2021">40823242 site</a> | <a href="http://github.com/40823250/cd2021">40823250 repo</a>| <a href="http://40823250.github.io/cd2021">40823250 site</a> | <a href="http://github.com/40832244/cd2021">40832244 repo</a>| <a href="http://40832244.github.io/cd2021">40832244 site</a><br/>----------<br/><a href="http://github.com/40823225/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823214.github.io/stage3-bg6">stage3-bg6 site</a> | <a href="http://github.com/40823225/cd2021">40823225 repo</a> | <a href="http://40823225.github.io/cd2021">40823225 site</a> | <a href="http://github.com/40823214/cd2021">40823214 repo</a> | <a href="http://40823214.github.io/cd2021">40823214 site</a> | <a href="http://github.com/40823218/cd2021">40823218 repo</a> | <a href="http://40823218.github.io/cd2021">40823218 site</a> | <a href="http://github.com/40823211/cd2021">40823211 repo</a> | <a href="http://40823211.github.io/cd2021">40823211 site</a> | <a href="http://github.com/40823248/cd2021">40823248 repo</a> | <a href="http://40823248.github.io/cd2021">40823248 site</a> | <a href="http://github.com/40823247/cd2021">40823247 repo</a> | <a href="http://40823247.github.io/cd2021">40823247 site</a> | <a href="http://github.com/40823216/cd2021">40823216 repo</a> | <a href="http://40823216.github.io/cd2021">40823216 site</a> | <a href="http://github.com/40823238/cd2021">40823238 repo</a>| <a href="http://40823238.github.io/cd2021">40823238 site</a><br/>----------<br/><a href="http://github.com/40623144/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823233.github.io/stage3-bg7">stage3-bg7 site</a> | <a href="http://github.com/40623144/cd2021">40623144 repo</a> | <a href="http://40623144.github.io/cd2021">40623144 site</a> | <a href="http://github.com/40823233/cd2021">40823233 repo</a> | <a href="http://40823233.github.io/cd2021">40823233 site</a> | <a href="http://github.com/s40723224/cd2021">s40723224 repo</a> | <a href="http://s40723224.github.io/cd2021">s40723224 site</a> | <a href="http://github.com/40823241/cd2021">40823241 repo</a> | <a href="http://40823241.github.io/cd2021">40823241 site</a> | <a href="http://github.com/40423155/cd2021">40423155 repo</a> | <a href="http://40423155.github.io/cd2021">40423155 site</a> | <a href="http://github.com/40823227/cd2021">40823227 repo</a> | <a href="http://40823227.github.io/cd2021">40823227 site</a> | <a href="http://github.com/s40723233/cd2021">s40723233 repo</a> | <a href="http://s40723233.github.io/cd2021">s40723233 site</a><br/>----------</p>
<p></p>
<h2>W11 OBS使用教學</h2>
<p>測試人員:40823251</p>
<p><strong>步驟一:<br/>點選顯示器擷取點選需要的視窗即可錄製全螢幕。<br/><img alt="" height="400" src="/images/1620829156474.jpg" width="600"/><br/></strong></p>
<p><strong>步驟二:<br/>點擊右方開始串流且youtube點選直播即可完成。 備註:youtube第一次直播需等待24H<br/>如需備份可同時點選下方的開始錄製或者至YOUTUBE下載直播檔。<br/><img alt="" height="400" src="/images/1620829644531.jpg" width="600"/><br/></strong></p>
<p><strong>問題:<br/>(1.)錄製現場聲音過於吵雜。</strong></p>
<p><strong>解決辦法:點選音訊源，點擊濾鏡。<br/><img alt="" height="400" src="/images/1620829938158.jpg" width="600"/><br/>選擇雜訊抑制即可有效改善錄音現況。<br/><img alt="" height="400" src="/images/1620829997892.jpg" width="600"/><br/></strong></p>
<p><strong>(2.)顯示器擷取是黑屏<br/>參考資料:<a href="https://russquan.gitlab.io/obs-black-screen-fix-win10/">https://russquan.gitlab.io/obs-black-screen-fix-win10/</a></strong></p>
<h2>W12 上課直播</h2>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="300" src="https://www.youtube.com/embed/PCDypBPIAkA" width="400"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="300" src="https://www.youtube.com/embed/tY4AV3i3Ano" width="400"></iframe></p>
<h2>W13 Gitlab建立</h2>
<p><strong>測試人員:40823245</strong></p>
<p><strong>注:由於40823245的github被封，故由組員代替push。<br/></strong></p>
<h4>gitlab步驟影片版本(用stage2-bg1做示範)</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/3eU8ow9xd_A" title="YouTube video player" width="560"></iframe></p>
<h4><a href="https://gitlab.com/users/sign_up">創建gitlab帳號</a></h4>
<h4>username:40823245</h4>
<h4>email:40823245@gm.nfu.edu.tw</h4>
<h4>新增空的倉儲</h4>
<p><img alt="" height="200" src="https://40823245.gitlab.io/cd2021/images/gitlab.png" width="1000"/></p>
<p><img alt="" height="400" src="https://40823245.gitlab.io/cd2021/images/gitlab-1.png" width="800"/></p>
<h4>輸入要同步過來的倉儲名稱(我用stage3-bg1當例子)</h4>
<h4>下面勾公開和不要有內建(空倉儲)</h4>
<p><img alt="" height="500" src="https://40823245.gitlab.io/cd2021/images/gitlab-2.png" width="900"/></p>
<h4>建完會看到下圖</h4>
<p><img alt="" height="500" src="https://40823245.gitlab.io/cd2021/images/gitlab-3.png" width="700"/></p>
<h4>在對應的資料夾輸入git branch確認主分支</h4>
<p><img alt="" height="150" src="https://40823245.gitlab.io/cd2021/images/gitlab-4.png" width="400"/></p>
<h4>如果無yml檔就建立，有yml檔就改(master→main)</h4>
<p><img alt="" height="300" src="https://40823245.gitlab.io/cd2021/images/gitlab-5.png" width="300"/></p>
<h4>yml程式碼(檔名要存yml)</h4>
<div>
<div class="syntaxhighlighter html" id="highlighter_979468">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">pages:</code></div>
<div class="line number2 index1 alt1"><code class="html spaces">  </code><code class="html plain">stage: deploy</code></div>
<div class="line number3 index2 alt2"><code class="html spaces">  </code><code class="html plain">script:</code></div>
<div class="line number4 index3 alt1"><code class="html spaces">  </code><code class="html plain">- mkdir .public</code></div>
<div class="line number5 index4 alt2"><code class="html spaces">  </code><code class="html plain">- cp -r * .public</code></div>
<div class="line number6 index5 alt1"><code class="html spaces">  </code><code class="html plain">- mv .public public</code></div>
<div class="line number7 index6 alt2"><code class="html spaces">  </code><code class="html plain">artifacts:</code></div>
<div class="line number8 index7 alt1"><code class="html spaces">    </code><code class="html plain">paths:</code></div>
<div class="line number9 index8 alt2"><code class="html spaces">    </code><code class="html plain">- public</code></div>
<div class="line number10 index9 alt1"><code class="html spaces">  </code><code class="html plain">only:</code></div>
<div class="line number11 index10 alt2"><code class="html spaces">  </code><code class="html plain">- main</code></div>
<div class="line number12 index11 alt1"><code class="html plain">variables:</code></div>
<div class="line number13 index12 alt2"><code class="html spaces">  </code><code class="html plain">GIT_SUBMODULE_STRATEGY: recursive</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4>推推看</h4>
<p><img alt="" height="350" src="https://40823245.gitlab.io/cd2021/images/gitlab-6.png" width="700"/></p>
<h4>再檢查一次主分支</h4>
<h4>git remote到gitlab</h4>
<div>
<div class="syntaxhighlighter html" id="highlighter_456234">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">git remote add gitlab https://gitlab.com/40823245/stage3-bg1.git</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h4>推到gitlab</h4>
<p><img alt="" height="200" src="https://40823245.gitlab.io/cd2021/images/gitlab-7.png" width="600"/></p>
<h4>可以看到gitlab為下圖</h4>
<p><img alt="" height="450" src="https://40823245.gitlab.io/cd2021/images/gitlab-8.png" width="800"/></p>
<h4>commit紀錄都在</h4>
<p><img alt="" height="400" src="https://40823245.gitlab.io/cd2021/images/gitlab-9.png" width="800"/></p>
<h4>到設定找到gitlab同步後的網址</h4>
<p><img alt="" height="600" src="https://40823245.gitlab.io/cd2021/images/gitlab-10.png" width="300"/></p>
<h4>若沒顯示下圖請重整頁面，它需要時間轉</h4>
<p><img alt="" height="500" src="https://40823245.gitlab.io/cd2021/images/gitlab-11.png" width="600"/></p>
<h4>點連結可看到同步的頁面和網址</h4>
<p><img alt="" height="600" src="https://40823245.gitlab.io/cd2021/images/gitlab-12.png" width="800"/></p><h3>gitlab-ssh</h3>
<h4>gitlab新增ssh影片操作</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/X_YCzXp6uw4" title="YouTube video player" width="560"></iframe></p>
<h4>基本和原本做ssh方法一樣，只是把github改成gitlab，和到gitlab設定ssh</h4>
<h1>TASK2測試區</h1>
<p><strong>主題:生產線</strong></p>
<p><strong>大綱:</strong><br/><strong>有很多大大小小的箱子在一個轉軸（旋轉飛船原型）上，透過夾抓（40823234夾爪）將貨放到輸送帶上，然後利用分大小的機器（分球機原型）把每個貨物分到不同位子，再利用堆高機（40823245-stage2）把其中一個貨放到另一個地方，然後那一個貨裡面就是產品（裝掃地機器人）。</strong><b><br/></b></p>
<h2>掃地機器人</h2>
<p><strong>掃地機器人</strong></p>
<p><strong>測試組員:40823245</strong></p>
<p><strong><a href="/downloads/stage1-bg1/text.ttt">第一版</a>(<a href="/downloads/stage1-bg1/text.py">py檔</a>)    日期:2021/05/05<br/><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="300" src="https://www.youtube.com/embed/QHVSKg0OuRg" width="400"></iframe><br/>說明:先利用簡單的機構去測試是否遷入成功及程式是否可執行。</strong></p>
<p><strong><a href="/downloads/stage1-bg1/Sweeping robot-13.ttt">第二版</a>(<a href="/downloads/stage1-bg1/Sweeping robot-10.py">py檔</a>)<br/><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="300" src="https://www.youtube.com/embed/uOUmFJpRCbM" width="400"></iframe><br/>注意:本次影片測試速度設定為0故在原地不動。<br/>問題:出現不正常運動軌跡、異常抖動情況。</strong></p>
<p><strong><a href="/downloads/stage1-bg1/text-1.ttt">第三版</a>(<a href="/downloads/stage1-bg1/text-1.py">py檔</a>)    日期:2021/05/06<br/><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/pa2Ds_MFtNs" width="400"></iframe><br/>說明:將原本機構簡化判斷是否為機構圖之問題。</strong></p>
<p></p>
<h4><a href="/downloads/stage1/Sweeping robot-15.ttt">測試4</a>(<a href="/downloads/stage1/app-text.py">py檔</a>、<a href="/downloads/stage1/vrep_linefollower.py">py檔-1</a>):用api頁面操作</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="300" src="https://www.youtube.com/embed/ulmiefIWx1g" title="YouTube video player" width="400"></iframe></p>
<h4>測試5(檔同上測試4):新增x-y時間位置圖</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="300" src="https://www.youtube.com/embed/tqAHMwMcrDQ" title="YouTube video player" width="400"></iframe></p>
<h4>測試6(<a href="/downloads/stage1/api.py">py檔</a>):鍵盤控制</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="300" src="https://www.youtube.com/embed/WwojxH71vyE" title="YouTube video player" width="400"></iframe></p>
<p>頁面操作程式碼:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">'''remoteApiConnections.txt file content:

// Let's start a continuous remote API server service on port 19997:
portIndex1_port             = 19997
portIndex1_debug            = false
portIndex1_syncSimTrigger   = true
19998:
portIndex2_port             = 19998
portIndex2_debug            = false
portIndex2_syncSimTrigger   = true
'''
from flask import Flask, render_template, redirect
from vrep_linefollower import VrepLineFollower

line_follower = VrepLineFollower()

app = Flask(__name__)

@app.route("/")
def index():
  return render_template('controls.html')

@app.route('/do/&lt;direction&gt;')
def do(direction):
  global line_follower
  line_follower.to_direction(direction)
  return redirect('/')


if __name__ == '__main__':
  app.run(host='192.168.192.111')
</pre>
<p></p>
<p>頁面操作程式碼-1:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep

clientID = vrep.simxStart('192.168.192.111', 19997, True, True, 5000, 5)
 
if clientID != -1:
    print ('Connected to remote API server')
 
    res = vrep.simxAddStatusbarMessage(
        clientID, "text",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
else:
       print ('Failed connecting to remote API server')

class VrepLineFollower:
  def __init__(self):
    vrep.simxFinish(-1) # just in case, close all opened connections
    self.clientID = vrep.simxStart('192.168.192.111', 19997, True, True, 5000, 5)
    vrep.simxStartSimulation(self.clientID, vrep.simx_opmode_oneshot)
    
    self.wheelRadius = 0.027
    self.linearVelocityLeft  = 0.1
    self.linearVelocityRight = 0.1
    
    # vectors [left, right]
    self.direction_v = {
     'up':    [ 0.01,  0.01],
     'down':  [-0.01, -0.01],
     'left':  [-0.01,  0.01],
     'right': [ 0.01, -0.01]
    }

    res, self.leftJointDynamic  = vrep.simxGetObjectHandle(self.clientID, "LBMotor",  vrep.simx_opmode_oneshot_wait)
    res, self.rightJointDynamic = vrep.simxGetObjectHandle(self.clientID, "RBMotor", vrep.simx_opmode_oneshot_wait)

  # direction = 'up' | 'down' | 'left' | 'right'
  def to_direction(self, direction):
        direction_vector = self.direction_v[direction]
        self.linearVelocityLeft  += direction_vector[0]
        self.linearVelocityRight += direction_vector[1]
        self.set_motors()

  # private
  def set_motors(self):
        t_left  = self.linearVelocityLeft  / self.wheelRadius
        t_right = self.linearVelocityRight / self.wheelRadius
        vrep.simxSetJointTargetVelocity(self.clientID, self.leftJointDynamic,  t_left,  vrep.simx_opmode_oneshot_wait)
        vrep.simxSetJointTargetVelocity(self.clientID, self.rightJointDynamic, t_right, vrep.simx_opmode_oneshot_wait)
</pre>
<p><img alt="" height="200" src="/images/api-3.png" width="600"/></p>
<p><img alt="" height="400" src="/images/api-4.png" width="800"/></p>
<p>鍵盤操作程式碼:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import keyboard

print ('Start')

# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.192.111', 19997, True, True, 5000, 5)
 
if clientID !=-1:
    print ('Connected to remote API server')
  
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823245",
        vrep.simx_opmode_oneshot)
         
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
         
    opmode = vrep.simx_opmode_oneshot_wait
    
    vrep.simxStartSimulation(clientID, opmode)
    ret,front_handle=vrep.simxGetObjectHandle(clientID,"FrontMotor",opmode)
    ret,left_handle=vrep.simxGetObjectHandle(clientID,"LBMotor",opmode)
    ret,right_handle=vrep.simxGetObjectHandle(clientID,"RBMotor",opmode)
    ret,lfan_handle=vrep.simxGetObjectHandle(clientID,"LMotor",opmode)
    ret,rfan_handle=vrep.simxGetObjectHandle(clientID,"RMotor",opmode)
    while True:
        if keyboard.is_pressed("w"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,10,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,10,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,10,opmode)
            print("go")
           
        if keyboard.is_pressed("s"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,-10,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,-10,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,-10,opmode)
            print("back")
           
        if keyboard.is_pressed("a"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,0.05,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,0,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,10,opmode)
            print("left")
           
        if keyboard.is_pressed("d"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,0.05,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,10,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,0,opmode)
            print("right")
           
        if keyboard.is_pressed("w+a"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,5,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,0,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,10,opmode)
            print("turn left")
            
        if keyboard.is_pressed("w+d"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,5,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,10,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,0,opmode)    
            print("turn right")
            
            
        if keyboard.is_pressed("space"):
            vrep.simxSetJointTargetVelocity(clientID,front_handle,0,opmode)
            vrep.simxSetJointTargetVelocity(clientID,left_handle,0,opmode)
            vrep.simxSetJointTargetVelocity(clientID,right_handle,0,opmode)
            vrep.simxSetJointTargetVelocity(clientID,lfan_handle,0,opmode)
            vrep.simxSetJointTargetVelocity(clientID,rfan_handle,0,opmode)
            print("stop")
            
        if keyboard.is_pressed("q"):
            vrep.simxSetJointTargetVelocity(clientID,lfan_handle,20,opmode)
            print("turn left fan")
           
        if keyboard.is_pressed("e"):
            vrep.simxSetJointTargetVelocity(clientID,rfan_handle,20,opmode)
            print("turn right fan")
            
else:
    print ('Failed connecting to  remote API server')
    print ('End')</pre>
<p><img alt="" height="300" src="/images/api.png" width="350"/></p>
<p><img alt="" height="550" src="/images/api-1.png" width="600"/></p>
<p><img alt="" height="250" src="/images/api-2.png" width="550"/></p>
<h4>參考資料</h4>
<h4><a href="http://mde.tw/cad2020/content/CoppeliaSim.html">網頁操作api</a>、<a href="https://ithelp.ithome.com.tw/articles/10224594">flask使用</a>、<a href="https://ithelp.ithome.com.tw/articles/10213468">render_template</a>、<a href="https://www.learncodewithmike.com/2020/01/python-class.html">物件導向</a>、<a href="http://kaiching.org/pydoing/py/python-return.html">def-return</a>、<a href="https://40823246.github.io/cd2021/content/task2.html">task2鍵盤操作</a></h4>
<h2>分球機</h2>
<p><strong>測試人員:40823208     日期:2021/05/04</strong></p>
<p><strong> 第一版</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/uPxCMuzhyxU" title="YouTube video player" width="560"></iframe></p>
<h2>堆高機</h2>
<p><strong>測試人員:40823246     日期:2021/05/04<br/></strong></p>
<p><strong>內容:使其連線成功。<br/><img alt="" height="400" src="/images/remoto api 連動成功.gif" width="600"/><br/></strong></p>
<h2>夾爪機構</h2>
<p><strong>測試人員:40823234     日期:2021/05/05</strong></p>
<p><strong> 第一版</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/_oqcnraep2s" width="500"></iframe></strong></p>
<p><strong>第一版</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
  
print ('Start')
  
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.1.114', 19997, True, True, 5000, 5)
 
if clientID !=-1:
    print ('Connected to remote API server')
  
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823234",
        vrep.simx_opmode_oneshot)
         
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
         
    opmode = vrep.simx_opmode_oneshot_wait
    vrep.simxStartSimulation(clientID, opmode)
    ret, wristHandle = vrep.simxGetObjectHandle(clientID, "VerticalJoint",opmode)
    vrep.simxSetJointTargetVelocity(clientID,wristHandle,1,opmode)
    ret, wristHandle = vrep.simxGetObjectHandle(clientID, "SpiritJoint",opmode)
    vrep.simxSetJointTargetVelocity(clientID,wristHandle,1,opmode)
    ret, wristHandle = vrep.simxGetObjectHandle(clientID, "joint",opmode)
    vrep.simxSetJointTargetVelocity(clientID,wristHandle,1,opmode)
else:
    print ('Failed connecting to  remote API server')
print ('End')</pre>
<p></p>
<p><strong>測試人員:40823234     日期:2021/05/10</strong></p>
<p><strong>第二版 使用python keyboard  檔案下載:<a href="/downloads/remote api.zip">remote api.zip</a></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/qUfPGBOkqMo" width="500"></iframe></strong></p>
<p><strong></strong></p>
<p><strong>使用keyboard程式:</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import keyboard
  
print ('Start')
  
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.1.114', 19997, True, True, 5000, 5)
 
if clientID !=-1:
    print ('Connected to remote API server')
  
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823234",
        vrep.simx_opmode_oneshot)
         
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
         
    opmode = vrep.simx_opmode_oneshot_wait
    vrep.simxStartSimulation(clientID, opmode)
    ret,vertical_handle=vrep.simxGetObjectHandle(clientID,"VerticalJoint",opmode)#設定軸對應名稱
    ret,spirit_handle=vrep.simxGetObjectHandle(clientID,"SpiritJoint",opmode)
    ret,cam_handle=vrep.simxGetObjectHandle(clientID,"joint",opmode)
    while True:
        #keyboard "w" 前進
     if keyboard.is_pressed("w"):
            print("You pressed w")
           
            vrep.simxSetJointTargetVelocity(clientID,vertical_handle,0.1,opmode)
     if keyboard.is_pressed("s"):#keyboard "s" 後退
            print("You pressed s")
           
            vrep.simxSetJointTargetVelocity(clientID,vertical_handle,-0.1,opmode)
     if keyboard.is_pressed("a"):#keyboard "a"向左 
            print("You pressed a")
           
            vrep.simxSetJointTargetVelocity(clientID,spirit_handle,0.1,opmode)
     if keyboard.is_pressed("d"):#keyboard "d" 向右
            print("You pressed d")
           
            vrep.simxSetJointTargetVelocity(clientID,spirit_handle,-0.1,opmode)
     if keyboard.is_pressed("q"):#keyboard "q" 前進後退停止
            print("You pressed q")
           
            vrep.simxSetJointTargetVelocity(clientID,vertical_handle,0,opmode)
     if keyboard.is_pressed("e"):#keyboard "e" 左右停止
            print("You pressed e")
           
            vrep.simxSetJointTargetVelocity(clientID,spirit_handle,0,opmode) 
     if keyboard.is_pressed("r"):#keyboard "r" 凸輪轉動
            print("You pressed r")
           
            vrep.simxSetJointTargetVelocity(clientID,cam_handle,1,opmode)   
     if keyboard.is_pressed("f"):#keyboard "f" 凸輪停止
            print("You pressed f")
           
            vrep.simxSetJointTargetVelocity(clientID,cam_handle,0,opmode)        
else:
    print ('Failed connecting to  remote API server')
print ('End')</pre>
<p></p>
<h2>遊樂設施</h2>
<p><strong>測試人員:40823232    日期:2021/05/14</strong></p>
<p>成功驅動</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Fl1O_Nr4s-M" title="YouTube video player" width="560"></iframe></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
  
print ('Start')
  
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.192.115', 19997, True, True, 5000, 5)
  
if clientID != -1:
    print ('Connected to remote API server')
  
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823232",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm
    opmode = vrep.simx_opmode_oneshot_wait
  
    # Try to retrieve motors and robot handlers
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle
    vrep.simxStartSimulation(clientID,opmode)
    ret1,front_handle = vrep.simxGetObjectHandle(clientID, "Revolute_joint", opmode)
     
 
else:
    print ('Failed connecting to remote API server')</pre>
<h1>小組影片</h1>
<p>第九週<br/><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/DBZx-dGqLOI" width="400"></iframe></p>
<p>第十週<br/>(1)連接ipv4<br/><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/ZfsVqRFf2gI" width="400"></iframe><br/>(2)task1教學<br/><iframe allowfullscreen="allowfullscreen" height="300" src="//www.youtube.com/embed/eAf-Pi5OgB0" width="400"></iframe></p>
<h1>直播影片</h1>
<h4>W11     日期:2021/05/07</h4>
<h4>直播人員: 40823208 李翊帆 40823213 王鼎鈞</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/yEfYtkTvw-Q" title="YouTube video player" width="560"></iframe></p>
<h4>直播人員: 40823245 林浩瑋 40823251 林進益<br/><iframe allowfullscreen="allowfullscreen" height="315" src="//www.youtube.com/embed/Dxkn_nVT4F8" width="560"></iframe></h4>
<h4>W12     日期:2021/05/14</h4>
<h4>直播人員: 40823208 李翊帆 40823235 邱璽<br/><iframe allowfullscreen="allowfullscreen" height="315" src="//www.youtube.com/embed/PCDypBPIAkA" width="560"></iframe><br/><strong></strong></h4>
<h4>直播人員: 40823246 朱晉賢 40823251 林進益<br/><iframe allowfullscreen="allowfullscreen" height="315" src="//www.youtube.com/embed/tY4AV3i3Ano" width="560"></iframe></h4>
<p><strong>日期:2021/05/21<br/><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="315" src="https://www.youtube.com/embed/XYh2GjPH3Rg" width="560"></iframe></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="315" src="https://www.youtube.com/embed/GJ1GiBV8N48" width="560"></iframe></strong></p>
<h4><strong></strong></h4>